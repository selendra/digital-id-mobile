"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.bindaccount = void 0;
const api_1 = require("@selendra/api");
const api_2 = require("@polkadot/api");
const create_signature_1 = require("./create_signature");
const evm_1 = require("./evm");
async function bindaccount(substrateMnenonic, privateKey, substrateProvider, evmProverider) {
    const provider = new api_2.WsProvider(substrateProvider);
    const api = new api_2.ApiPromise((0, api_1.options)({ provider }));
    await api.isReadyOrError;
    const keyring = new api_2.Keyring({
        type: 'sr25519',
        ss58Format: 204
    });
    const substrateWallet = keyring.addFromMnemonic(substrateMnenonic);
    const genesisHash = api.genesisHash.toString();
    const chainId = parseInt(api.consts.evmAccounts.chainId.toString());
    const evmAddress = (0, evm_1.evm_address)(privateKey);
    const balance = await (0, evm_1.evm_balances)(evmProverider, evmAddress);
    if (balance > 0) {
        throw new Error('Account already exit, please use new evm account');
    }
    ;
    const signature = (0, create_signature_1.create_signature)(privateKey, genesisHash, chainId, substrateWallet.address);
    const hash = await api.tx.evmAccounts
        .claimAccount(evmAddress, signature)
        .signAndSend(substrateWallet);
    return hash;
}
exports.bindaccount = bindaccount;
//# sourceMappingURL=index.js.map