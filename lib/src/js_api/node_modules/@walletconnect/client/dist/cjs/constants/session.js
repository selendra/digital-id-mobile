"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.SESSION_EMPTY_RESPONSE = exports.SESSION_EMPTY_PERMISSIONS = exports.SESSION_REASONS = exports.SESSION_EVENTS = exports.SESSION_STATUS = exports.SESSION_SIGNAL_METHOD_PAIRING = exports.SESSION_DEFAULT_TTL = exports.SESSION_CONTEXT = exports.SESSION_JSONRPC = void 0;
const time_1 = require("./time");
exports.SESSION_JSONRPC = {
    propose: "wc_sessionPropose",
    approve: "wc_sessionApprove",
    reject: "wc_sessionReject",
    update: "wc_sessionUpdate",
    delete: "wc_sessionDelete",
    payload: "wc_sessionPayload",
    ping: "wc_sessionPing",
    notification: "wc_sessionNotification",
};
exports.SESSION_CONTEXT = "session";
exports.SESSION_DEFAULT_TTL = time_1.SEVEN_DAYS;
exports.SESSION_SIGNAL_METHOD_PAIRING = "pairing";
exports.SESSION_STATUS = {
    proposed: "proposed",
    responded: "responded",
    pending: "pending",
    settled: "settled",
};
exports.SESSION_EVENTS = {
    payload: "session_payload",
    proposed: "session_proposed",
    responded: "session_responded",
    settled: "session_settled",
    updated: "session_updated",
    deleted: "session_deleted",
    notification: "session_notification",
};
exports.SESSION_REASONS = {
    settled: "Session settled",
    not_approved: "Session not approved",
    responded: "Session proposal responded",
    acknowledged: "Session response acknowledged",
};
exports.SESSION_EMPTY_PERMISSIONS = {
    jsonrpc: {
        methods: [],
    },
    blockchain: {
        chains: [],
    },
    notifications: {
        types: [],
    },
};
exports.SESSION_EMPTY_RESPONSE = {
    metadata: {
        name: "",
        description: "",
        url: "",
        icons: [],
    },
    state: {
        accounts: [],
    },
};
//# sourceMappingURL=session.js.map